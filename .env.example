# ClarityDocs Environment Variables
# Copy this file to .env and fill in your actual values

# =============================================================================
# PUBLIC VARIABLES (Client-side - safe to expose)
# =============================================================================

# Firebase Configuration
# Get from: Firebase Console → Project Settings → Web App
NEXT_PUBLIC_FIREBASE_API_KEY=your_firebase_api_key_here
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=your-project-id.firebaseapp.com
NEXT_PUBLIC_FIREBASE_PROJECT_ID=your-project-id
NEXT_PUBLIC_FIREBASE_APP_ID=1:123456789:web:abcdef123456
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=123456789
NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=G-XXXXXXXXXX

# =============================================================================
# PRIVATE VARIABLES (Server-side only - keep secret!)
# =============================================================================

# Google AI Gemini API Key
# Get from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# Google Cloud API Key (for Document AI and Translation)
# Get from: Google Cloud Console → APIs & Services → Credentials
GOOGLE_CLOUD_API_KEY=your_google_cloud_api_key_here

# =============================================================================
# GOOGLE CLOUD CONFIGURATION
# =============================================================================

# Your Google Cloud Project ID
GCLOUD_PROJECT=your_project_id_here

# Document AI Processor ID
# Get from: Google Cloud Console → Document AI → Processors
DOCAI_PROCESSOR_ID=your_processor_id_here

# Document AI Location (usually 'us' or 'eu')
DOCAI_LOCATION=us

# =============================================================================
# SERVICE ACCOUNT CREDENTIALS
# =============================================================================

# Service Account Email
# Get from: Google Cloud Console → IAM → Service Accounts
GOOGLE_CLOUD_CLIENT_EMAIL=your_service_account@your_project.iam.gserviceaccount.com

# Service Account Private Key
# IMPORTANT: Preserve newlines by escaping them with \\n
# Example format shown below:
GOOGLE_CLOUD_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\\nYOUR_PRIVATE_KEY_CONTENT_HERE\\n-----END PRIVATE KEY-----\\n"

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Firebase Setup:
#    - Go to https://console.firebase.google.com/
#    - Create project or use existing one
#    - Enable Authentication with Email/Password AND Google OAuth
#    - Get ALL config values from Project Settings → Web App
#    - Copy projectId, appId, authDomain, apiKey, messagingSenderId, measurementId

# 2. Google OAuth Setup (CRITICAL for "Sign in with Google"):
#    a) Firebase Console:
#       - Authentication → Sign-in method → Enable "Google"
#       - Add "localhost" to authorized domains
#    
#    b) Google Cloud Console (REQUIRED to fix redirect_uri_mismatch):
#       - Go to https://console.cloud.google.com
#       - APIs & Services → Credentials
#       - Find OAuth 2.0 Client ID (Web application)
#       - Add Authorized redirect URIs (EXACT format):
#         * https://your-project-id.firebaseapp.com/__/auth/handler
#         * http://localhost:9002/__/auth/handler
#       - Add Authorized JavaScript origins:
#         * https://your-project-id.firebaseapp.com
#         * http://localhost:9002
#       - SAVE and wait 5-10 minutes for changes to propagate

# 3. Google Cloud Setup:
#    - Create project at https://console.cloud.google.com/
#    - Enable APIs: AI Platform, Document AI, Translation
#    - Create service account with appropriate roles
#    - Create Document AI processor (OCR type)

# 4. API Keys:
#    - Gemini: https://aistudio.google.com/app/apikey
#    - Google Cloud: Console → APIs & Services → Credentials

# 5. Security Notes:
#    - Never commit this file with real values
#    - Use environment-specific values for production
#    - Restrict API keys by domain/IP when possible